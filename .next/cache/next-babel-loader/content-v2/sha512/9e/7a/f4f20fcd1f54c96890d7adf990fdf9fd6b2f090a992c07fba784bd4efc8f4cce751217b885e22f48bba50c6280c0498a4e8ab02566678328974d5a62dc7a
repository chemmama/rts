{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\famil\\\\Desktop\\\\emile programmation\\\\site_emile\\\\renovation\\\\pages\\\\Route.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nexport default _s(function (_ref) {\n  _s();\n\n  var href = _ref.href,\n      children = _ref.children;\n  var router = useRouter();\n  var className = children.props.className || '';\n\n  if (router.pathname === href) {\n    className = \"\".concat(className, \" selected\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(Link, {\n    href: href,\n    children: /*#__PURE__*/React.cloneElement(children, {\n      className: className\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 12\n  }, _this);\n}, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});","map":{"version":3,"sources":["C:/Users/famil/Desktop/emile programmation/site_emile/renovation/pages/Route.js"],"names":["React","Link","useRouter","href","children","router","className","props","pathname","cloneElement"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,kBAAe,gBAAwB;AAAA;;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACnC,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEA,MAAII,SAAS,GAAGF,QAAQ,CAACG,KAAT,CAAeD,SAAf,IAA4B,EAA5C;;AACA,MAAID,MAAM,CAACG,QAAP,KAAoBL,IAAxB,EAA8B;AAC1BG,IAAAA,SAAS,aAAMA,SAAN,cAAT;AACH;;AAED,sBAAO,QAAC,IAAD;AAAM,IAAA,IAAI,EAAEH,IAAZ;AAAA,2BAAmBH,KAAK,CAACS,YAAN,CAAmBL,QAAnB,EAA6B;AAAEE,MAAAA,SAAS,EAATA;AAAF,KAA7B;AAAnB;AAAA;AAAA;AAAA;AAAA,WAAP;AACH,CATD;AAAA,UACmBJ,SADnB;AAAA","sourcesContent":["import React from 'react'\r\nimport Link from 'next/link'\r\nimport { useRouter } from 'next/router'\r\n\r\nexport default ({ href, children }) => {\r\n    const router = useRouter()\r\n\r\n    let className = children.props.className || ''\r\n    if (router.pathname === href) {\r\n        className = `${className} selected`\r\n    }\r\n\r\n    return <Link href={href}>{React.cloneElement(children, { className })}</Link>\r\n}"]},"metadata":{},"sourceType":"module"}